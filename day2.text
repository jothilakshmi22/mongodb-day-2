Design database for Zen class programme

1.topic and task collection

[
  {
    "month": "june",
    "june_topic": [
      "introduction of html",
      "html tag",
      "html table",
      "html form",
      "other details about html"
    ],
    "june_task": [
      "html form create",
      "html table create",
      "using all tags on project"
    ]
  },
  {
    "month": "august",
    "august_topic": [
      "introduction of css and bootstrap",
      "box model",
      "flex box and grid",
      "position",
      "other inline code"
    ],
    "august_task": [
      "html form with css ",
      "html table with bootstrap",
      "create project with css and html"
    ]
  },
  {
    "month": "october",
    "october_topic": [
      "introduction of database",
      "nosql vs sql",
      "mysql queries",
      "mongodb queries",
      
    ],
    "october_task": [
      "creat table in mqsql",
      "create collections in mongodb",
      "task in queries"
    ]
  },
  
]

1.Find all the topics and tasks which are thought in the month of October

 db.collection.find({
  month: "october",
})

output:
[
  {
    "_id": ObjectId("5a934e000102030405000002"),
    "month": "october",
    "october_task": [
      "creat table in mqsql",
      "create collections in mongodb",
      "task in queries"
    ],
    "october_topic": [
      "introduction of database",
      "nosql vs sql",
      "mysql queries",
      "mongodb queries"
    ]
  }
]

2.company_drives collection

[
  {
    "name": "sam",
    "placement": "yes",
    "day": 15,
    "month": "june",
    "year": 2020,
    
  },
  {
    "name": "viji",
    "placement": "yes",
    "day": 30,
    "month": "october",
    "year": 2020,
    
  },
  {
    "name": "kamal",
    "placement": "no",
    
  },
  {
    "name": "sathish",
    "placement": "yes",
    "day": 20,
    "month": "august",
    "year": 2020,
    
  },
  {
    "name": "arun",
    "placement": "no",
    
  },
  {
    "name": "john",
    "placement": "no",
    
  },
  {
    "name": "ammu",
    "placement": "no",
    
  },
  {
    "name": "ajith",
    "placement": "yes",
    "day": 28,
    "month": "october",
    "year": 2020,
    
  }
]

2.Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

db.collection.find({
  day: {
    "$gt": 15,
    "$lt": 31
  },
  "month": "october"
})


output:
[
  {
    "_id": ObjectId("5a934e000102030405000001"),
    "day": 30,
    "month": "october",
    "name": "viji",
    "placement": "yes",
    "year": 2020
  },
  {
    "_id": ObjectId("5a934e000102030405000004"),
    "day": 18,
    "month": "october",
    "name": "arun",
    "placement": "yes",
    "year": 2020
  },
  {
    "_id": ObjectId("5a934e000102030405000007"),
    "day": 28,
    "month": "october",
    "name": "ajith",
    "placement": "yes",
    "year": 2020
  }
]


3.Find all the company drives and students who are appeared for the placement.

db.collection.find({
  "placement": "yes",
  
})

 output:

[
  {
    "_id": ObjectId("5a934e000102030405000000"),
    "day": 15,
    "month": "june",
    "name": "sam",
    "placement": "yes",
    "year": 2020
  },
  {
    "_id": ObjectId("5a934e000102030405000001"),
    "day": 30,
    "month": "october",
    "name": "viji",
    "placement": "yes",
    "year": 2020
  },
  {
    "_id": ObjectId("5a934e000102030405000003"),
    "day": 20,
    "month": "august",
    "name": "sathish",
    "placement": "yes",
    "year": 2020
  },
  {
    "_id": ObjectId("5a934e000102030405000007"),
    "day": 28,
    "month": "october",
    "name": "ajith",
    "placement": "yes",
    "year": 2020
  }
]

3.codekata collection

[
  {
    "name": "sam",
    "codekata_solved":35;
  },
  {
    "name": "viji",
    "codekata_solved":20;
  },
  {
    "name": "kamal",
    "codekata_solved":30;
    
  },
  {
    "name": "sathish",
   "codekata_solved":10;
  },
  {
    "name": "arun",
    "codekata_solved":15;"
  },
  {
    "name": "john",
   "codekata_solved":33;
    
  },
  {
    "name": "ammu",
   "codekata_solved":0;
  },
  {
    "name": "ajith",
  "codekata_solved":5;
  }
]

4.Find the number of problems solved by the user in codekata

db.collection.find({},
{
  "codekata_solved": 1,
  "name": 1
})


4. mentor collection
[
  {
    "mentor_name": "sanjay",
    "mentee_count": 17
  },
  {
    "mentor_name": "vasan",
    "mentee_count": 20
  },
  {
    "mentor_name": "vinoth",
    "mentee_count": 12
  },
  {
    "mentor_name": "sai",
    "mentee_count": 15
  },
  {
    "mentor_name": "saravana",
    "mentee_count": 14
  },
  {
    "mentor_name": "dhamu",
    "mentee_count": 15
  },
  {
    "mentor_name": "sathish",
    "mentee_count": 8
  },
  {
    "mentor_name": "tamil",
    "mentee_count": 16
  }
]

5.Find all the mentors with who has the mentee's count more than 15

db.collection.find({
  "mentee_count": {
    "$gt": 15
  }
})

output:

[
  {
    "_id": ObjectId("5a934e000102030405000000"),
    "mentee_count": 17,
    "mentor_name": "sanjay"
  },
  {
    "_id": ObjectId("5a934e000102030405000001"),
    "mentee_count": 20,
    "mentor_name": "vasan"
  },
  {
    "_id": ObjectId("5a934e000102030405000007"),
    "mentee_count": 16,
    "mentor_name": "tamil"
  }
]

5.attendance and task collection
[
  {
    "name": "sam",
    "attendance": "present",
    "task": "submitted",
    "day": 1,
    "month": "october",
    "year": "2020"
  },
  {
    "name": "viji",
    "attendance": "absent",
    "task": "not submitted",
    "day": 30,
    "month": "october",
    "year": "2020"
  },
  {
    "name": "kamal",
    "attendance": "absent",
    "task": "not submitted",
    "day": 27,
    "month": "october",
    "year": "2020"
  },
  {
    "name": "sathish",
    "attendance": "present",
    "task": "submitted",
    "day": 8,
    "month": "october",
    "year": "2020"
  },
  {
    "name": "arun",
    "attendance": "absent",
    "task": "not submitted",
    "day": 15,
    "month": "october",
    "year": "2020"
  },
  {
    "name": "john",
    "attendance": "present",
    "task": "submitted",
    "day": 18,
    "month": "october",
    "year": "2020"
  },
  {
    "name": "ammu",
    "attendance": "present",
    "task": "submitted",
    "day": 3,
    "month": "october",
    "year": "2020"
  },
  {
    "name": "ajith",
    "attendance": "present",
    "task": "submitted",
    "day": 25,
    "month": "october",
    "year": "2020"
  }
]

6.Find the number of users who are absent and task is not submitted 
 between 15 oct-2020 and 31-oct-2020

db.collection.find({
  "attentance": "absent",
  "task": "not submitted"
})

output

[
  {
    "_id": ObjectId("5a934e000102030405000001"),
    "attendance": "absent",
    "day": 30,
    "month": "october",
    "name": "viji",
    "task": "not submitted",
    "year": "2020"
  },
  {
    "_id": ObjectId("5a934e000102030405000002"),
    "attendance": "absent",
    "day": 27,
    "month": "october",
    "name": "kamal",
    "task": "not submitted",
    "year": "2020"
  },
  {
    "_id": ObjectId("5a934e000102030405000004"),
    "attendance": "absent",
    "day": 15,
    "month": "october",
    "name": "arun",
    "task": "not submitted",
    "year": "2020"
  }
]